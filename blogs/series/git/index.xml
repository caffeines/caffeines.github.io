<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Caffeines</title>
    <link>https://www.sadat.me/blogs/series/git/</link>
    <description>Recent content in Git on Caffeines</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 Mar 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.sadat.me/blogs/series/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git Worktrees</title>
      <link>https://www.sadat.me/blogs/posts/git/worktree/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://www.sadat.me/blogs/posts/git/worktree/</guid>
      <description>&lt;h1 id=&#34;git-worktrees-a-powerful-feature-for-managing-multiple-working-directories&#34;&gt;Git Worktrees: A Powerful Feature for Managing Multiple Working Directories&lt;/h1&gt;&#xA;&lt;p&gt;Git worktrees are one of the most underutilized yet powerful features in Git. They allow us to maintain multiple working directories from a single Git repository, each with its own branch checked out. In this blog post, weâ€™ll explore what worktrees are, their benefits, and how to effectively use them in your development workflow.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-a-git-worktree&#34;&gt;What is a Git Worktree?&lt;/h2&gt;&#xA;&lt;p&gt;A Git worktree is an additional working directory linked to our main repository. Think of it as a way to check out multiple branches simultaneously, each in its own directory, while sharing the same Git history and objects.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
